import solara
from ..modules.modules import Module
from ..meta.segment_definitions import segment_definitions

@solara.component
def StartModule(key, start_module=None):
    m = Module(images_annotations = module_dict[key]["images"],
          syllable = module_dict[key]["syllable"],
          name = key,
          segment_definitions = segment_definitions,
          user_stats = None,
          module_stats = None,
          print = False)
    ex_syll = solara.reactive(-1)
    View(m, ex_syll, start_module)


@solara.component
def LandingPage(m, ex_syll):
  solara.Text(f"{m.module_name} with {m.n_syllables} tasks")
  def start():
    ex_syll.value += 1
  solara.Button("Start", on_click=start)


@solara.component
def ModulePage(m, ex_syll, n_syllables):
  m.executed_syllables = ex_syll.value
  solara.Text(f"{ex_syll.value+1}/{n_syllables}")
  m.syllables[m.executed_syllables].start()
  solara.Text(m.syllables[m.executed_syllables].task_description)
  options = list(m.syllables[m.executed_syllables].options)
  if options:
    answer_value = solara.reactive(options[0])
    solara.ToggleButtonsSingle(value=answer_value, values=options)
    def next():
      m.answer(answer_value.value)
      ex_syll.value += 1
  else:
    answer_value_x = solara.reactive(0)
    answer_value_y = solara.reactive(0)
    solara.InputText(label="x", value=answer_value_x)
    solara.InputText(label="y", value=answer_value_y)
    def next():
      m.answer([int(answer_value_x.value), int(answer_value_y.value)])
      ex_syll.value += 1
  solara.Button("Next", on_click=next)


@solara.component
def ResultsPage(m, start_module=None):
  m.result()
  solara.Text(f"Results:")
  solara.Text(f"{m.total_score}/{m.n_syllables}")
  solara.Text(f"{round(m.relative_score*100, 2)}%")
  if start_module is not None:
    def back_to_menu():
      start_module.value = None
    solara.Button("Back to main menu", on_click=back_to_menu)


@solara.component
def View(m, ex_syll, start_module = None, n_syllables=3):
  if ex_syll.value == -1:
    LandingPage(m, ex_syll)
  elif ex_syll.value >= 0 and ex_syll.value < n_syllables:
    ModulePage(m, ex_syll, n_syllables)
  elif ex_syll.value == n_syllables:
    ResultsPage(m, start_module)
